class Solution(object):
    def findSubstring(self, s, words):
        """
        :type s: str
        :type words: List[str]
        :rtype: List[int]
        """
        if not s or not words:
            return []
        
        word_length = len(words[0])
        num_words = len(words)
        total_length = word_length * num_words
        word_count = {}
        for word in words:
            word_count[word] = word_count.get(word, 0) + 1
        
        result = []
        for i in range(word_length):
            left = i
            sub_dict = {}
            count = 0
            for j in range(i, len(s) - word_length + 1, word_length):
                word = s[j:j + word_length]
                if word in word_count:
                    sub_dict[word] = sub_dict.get(word, 0) + 1
                    count += 1
                    while sub_dict[word] > word_count[word]:
                        sub_dict[s[left:left + word_length]] -= 1
                        count -= 1
                        left += word_length
                    if count == num_words:
                        result.append(left)
                else:
                    sub_dict.clear()
                    count = 0
                    left = j + word_length
        
        return result
